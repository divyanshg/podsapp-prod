import React, {useState, useEffect} from 'react';
import {View, Button, Alert, ToastAndroid as Toast, TouchableOpacity, Text} from 'react-native'
import { StripeProvider, CardField, useStripe } from '@stripe/stripe-react-native';
import {gStyle, colors} from '../constants';

export default function PaymentsButton() {
  const { initPaymentSheet, presentPaymentSheet } = useStripe();
  const [loading, setLoading] = useState(false);
  const [clientSecret, setClientSecret] = useState(null)

  const fetchPaymentSheetParams = async () => {
    const response = await fetch(`http://10.1.1.169:3700/payment-sheet`, {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json',
      },
    });
    const { paymentIntent, ephemeralKey, customer } = await response.json();
    setClientSecret(paymentIntent)
    return {
      paymentIntent,
      ephemeralKey,
      customer,
    };
  };

  const initializePaymentSheet = async () => {
    const {
      paymentIntent,
      ephemeralKey,
      customer,
    } = await fetchPaymentSheetParams();

    const { error } = await initPaymentSheet({
      customerId: customer,
      customerEphemeralKeySecret: ephemeralKey,
      paymentIntentClientSecret: paymentIntent,
    });
    if (!error) {
      setLoading(true);
    }
  };

  const openPaymentSheet = async () => {
    if(!clientSecret) return;
    const { error } = await presentPaymentSheet({ clientSecret });

    if (error) {
      Toast.show(`Error code: ${error.code} :`+ error.message, Toast.LONG);
    } else {
      Toast.show('Success ' + 'Your order is confirmed!', Toast.LONG);
    }
  };

  useEffect(() => {
    initializePaymentSheet();
  }, []);

  return (
    <TouchableOpacity
      disabled={!loading}
      style={{backgroundColor: loading ? colors.brandPrimary : colors.grey3, width: '90%', borderRadius: 4, alignItems: 'center', paddingVertical: 8}}
      onPress={openPaymentSheet}
    >
      <Text style={{color: colors.white}}>Continue</Text>
    </TouchableOpacity>
  );
}